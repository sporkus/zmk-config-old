/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <st/f0/stm32f072Xb.dtsi>
#include <st/f0/stm32f072v(8-b)tx-pinctrl.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "Le Chiffre (stm32)";
    compatible = "sporkus,le_chiffre_stm32", "st,stm32f072";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &cdc_acm_uart;
        zmk,kscan = &kscan;
        zmk,matrix_transform = &transform;
        zephyr,display = &oled;
        /* zmk,underglow = &led_strip; */
    };

    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <10>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)     RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)     RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)     RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                        RC(3,2)     RC(3,4)             RC(3,6)     RC(3,7)
        >;
    };

    transform_with_encoder: transform_with_encoder {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <10>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)             RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)             RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)             RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                        RC(3,2)     RC(3,4)                     RC(3,6)     RC(3,7)
                                                RC(3,5)
        >;
    };

    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "row2col";

        col-gpios
        = <&gpiob 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpioc 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpioc 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpioc 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiof 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiof 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;
        row-gpios
        = <&gpioa 8  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpiob 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;
    };

    encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        a-gpios = <&gpiob 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpiob 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	    steps = <30>;
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
	    triggers-per-rotation = <15>;
    };
};

&i2c1 {
    pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
    pinctrl-names = "default";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        prechargep = <0x22>;
    };
};

/* &spi3 { */
/*   led_strip: ws2812@0 { */
/*     compatible = "worldsemi,ws2812-spi"; */
/*     label = "WS2812"; */

/*     /1* SPI *1/ */
/*     reg = <0>; */
/*     spi-max-frequency = <5250000>; */

/*     /1* WS2812 *1/ */
/*     chain-length = <11>; /1* number of LEDs *1/ */
/*     spi-one-frame = <0x70>; /1* make sure to configure this properly for your SOC *1/ */
/*     spi-zero-frame = <0x40>; /1* make sure to configure this properly for your SOC *1/ */
/*     color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>; */
/*   }; */
/* }; */

&usb {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};

&clk_hsi {
    status = "okay";
};

&pll {
    prediv = <1>;
    mul = <6>;
    clocks = <&clk_hsi>;
    status = "okay";
};

&rcc {
    clocks = <&pll>;
    clock-frequency = <DT_FREQ_M(48)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <1>;
};


&rtc {
    status = "okay";
};

&flash0 {
    /*
     * For more information, see:
     * http: //docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Set 6Kb of storage at the end of the 128Kb of flash */
        storage_partition: partition@3e800 {
            reg = <0x0001e800 0x00001800>;
        };
    };
};
