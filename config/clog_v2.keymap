#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <160>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings =
                <&kp DOT>,
                <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_pipe: comma_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_PIPE";
            #binding-cells = <0>;
            bindings =
                <&kp COMMA>,
                <&kp PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <750>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <20>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <20>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                       &lt 3 W        &kp E       &kp R            &kp T        &kp Y       &kp U        &kp I     &lt 3 O
&kp Q  &mt LSHFT A  &mt LALT S  &mt LCTRL D  &mt LGUI F            &kp G        &kp H  &mt RGUI J  &mt RCTRL K  &mt RALT L  &mt RSHFT P  &kp SQT
             &kp Z       &kp X        &kp C     &lt 1 D            &kp B        &kp N     &lt 1 M    &kp COMMA     &kp DOT    &kp SLASH
                                               &kp BSPC  &skq LEFT_SHIFT  &lt 2 SPACE   &kp ENTER
            >;
        };

        SYM_layer {
            bindings = <
                      &kp LBRC  &kp RBRC   &kp HASH   &kp STAR  &kp TILDE  &kp N7  &kp N8  &kp N9
&kp CARET    &kp DOT  &kp LPAR  &kp RPAR     &kp GT  &kp EQUAL     &kp LT  &kp N4  &kp N5  &kp N6   &kp AMPS  &kp GRAVE
           &kp COMMA  &kp LBKT  &kp RBKT     &kp AT   &kp PLUS   &kp DLLR  &kp N1  &kp N2  &kp N3  &kp PRCNT
                                          &kp COLON     &trans     &trans  &kp N0
            >;
        };

        NAV_layer {
            bindings = <
                    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV       &kp C_NEXT   &kp F10    &kp F7  &kp F8     &kp F9
&kp C_PP  &kp LEFT      &kp DOWN        &kp UP   &kp RIGHT      &kp LC(TAB)  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp C_BRI_DN  &kp C_BRI_UP
          &kp HOME     &kp PG_DN     &kp PG_UP     &kp END  &kp LS(LC(TAB))   &kp F12    &kp F4  &kp F5     &kp F6     &kp PSCRN
                                                     &none            &none    &trans   &kp DEL
            >;
        };

        FN_layer {
            bindings = <
                     &none         &none        &reset  &bootloader  &bootloader        &reset         &none         &none
&none  &none  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
       &none         &none  &bt BT_SEL 4  &bt BT_SEL 3        &none        &none  &bt BT_SEL 3  &bt BT_SEL 4         &none  &none
                                                 &none        &none       &trans         &none
            >;
        };
    };
};
