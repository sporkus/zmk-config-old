#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings =
                <&kp DOT>,
                <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_pipe: comma_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_PIPE";
            #binding-cells = <0>;
            bindings =
                <&kp COMMA>,
                <&kp PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <750>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bspc {
            timeout-ms = <20>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
            layers = <0 1>;
        };

        combo_esc {
            timeout-ms = <20>;
            key-positions = <32 33>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <20>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                       &lt 3 W        &kp E           &kp R            &kp T        &kp Y       &kp U        &kp I     &lt 3 O
&kp Q  &mt LSHFT A  &mt LGUI S  &mt LCTRL D  &mt LEFT_ALT F            &kp G        &kp H  &mt RALT J  &mt RCTRL K  &mt RGUI L  &mt RSHFT SQT  &kp P
             &kp Z       &kp X        &kp C         &lt 1 V            &kp B        &kp N     &lt 1 M    &kp COMMA     &kp DOT    &kp SLASH
                                                   &kp ESC  &skq LEFT_SHIFT  &lt 2 SPACE   &kp ENTER
            >;
        };

        SYM_layer {
            bindings = <
                      &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS       &kp EQUAL          &kp PLUS  &kp N7  &kp N8  &kp N9
&kp TILDE  &kp GRAVE   &kp LEFT_BRACKET         &kp LBRC               &kp LPAR  &kp UNDERSCORE         &kp MINUS  &kp N4  &kp N5  &kp N6  &kp AMPS  &kp PIPE
           &kp COMMA           &kp LBKT         &kp RBKT                 &kp AT   &kp LESS_THAN  &kp GREATER_THAN  &kp N1  &kp N2  &kp N3  &kp BSLH
                                                                      &kp COLON          &trans            &trans  &kp N0
            >;
        };

        NAV_layer {
            bindings = <
                          &kp C_VOL_DN  &kp C_VOL_UP    &kp C_PREV       &kp C_NEXT   &kp F10  &kp PG_DN  &kp PG_UP     &kp F9
&kp C_PP  &kp LEFT_SHIFT  &kp LEFT_GUI     &kp LCTRL  &kp LEFT_ALT      &kp LC(TAB)  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp C_BRI_DN  &kp C_BRI_UP
                &kp HOME     &kp PG_DN     &kp PG_UP       &kp END  &kp LS(LC(TAB))   &kp F12     &kp F4     &kp F5     &kp F6     &kp PSCRN
                                                             &none            &none    &trans    &kp DEL
            >;
        };

        FN_layer {
            bindings = <
                     &none         &none        &reset  &bootloader  &bootloader        &reset         &none         &none
&none  &none  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
       &none         &none  &bt BT_SEL 4  &bt BT_SEL 3        &none        &none  &bt BT_SEL 3  &bt BT_SEL 4         &none  &none
                                                 &none        &none       &trans         &none
            >;
        };
    };
};
