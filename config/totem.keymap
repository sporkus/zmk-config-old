//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE          0
#define NUM           1
#define NAV           2
#define SHORTCUT      3
#define SHORTCUT_MAC  4
#define ADJ           5
#define COMBO_FAST 35

&mt {
    quick-tap-ms = <100>;
    global-quick-tap-ms = <150>;
    flavor = "balanced";
    tapping-term-ms = <220>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_bspc {
            bindings = <&bspc_morph>;
            key-positions = <8 7>;
            global-quick-tap-ms = <30>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
            global-quick-tap-ms = <80>;
            layers = <0 1 2>;
        };

        combo_ctrl_enter {
            bindings = <&kp LC(ENTER)>;
            key-positions = <16 17>;
            layers = <SHORTCUT 3>;
            global-quick-tap-ms = <80>;
        };

        combo_gui_enter {
            bindings = <&kp LG(ENTER)>;
            key-positions = <16 17>;
            layers = <SHORTCUT_MAC 4>;
            global-quick-tap-ms = <80>;
        };

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <1 11>;
            global-quick-tap-ms = <80>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <2 12>;
            global-quick-tap-ms = <80>;
        };

        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <3 13>;
            global-quick-tap-ms = <80>;
        };

        combo_mins {
            bindings = <&ht UNDER MINUS>;
            key-positions = <4 14>;
            global-quick-tap-ms = <80>;
        };

        combo_eql {
            bindings = <&ht PLUS EQL>;
            key-positions = <5 15>;
            global-quick-tap-ms = <80>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <6 16>;
            global-quick-tap-ms = <80>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <7 17>;
            global-quick-tap-ms = <80>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <8 18>;
            global-quick-tap-ms = <80>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            global-quick-tap-ms = <80>;
            layers = <0 2>;
        };

        combo_esc0 {
            bindings = <&kp ESC>;
            key-positions = <11 12>;
            global-quick-tap-ms = <COMBO_FAST>;
        };

        combo_esc1 {
            bindings = <&kp ESC>;
            key-positions = <18 17>;
            global-quick-tap-ms = <COMBO_FAST>;
        };

        combo_enter_num {
            bindings = <&kp ENTER>;
            key-positions = <12 13>;
            layers = <1>;
        };
    };

    macros {
        win_sleep: win_sleep {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp X &kp U &kp S>;
        };
        mac_finder: mac_finder {
            compatible = "zmk,behavior-macro";
            label = "mac_finder";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp F &kp I &kp N &kp D &kp E &kp R &kp DOT &kp A &kp P &kp P &kp RET>;
        };
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "(hold, tap)";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "quick release";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
        };
        num_word: behavior_num_word {
            compatible = "zmk,behavior-caps-word";
            label = "NUM_WORD";
            #binding-cells = <0>;
            layers = <NUM>;// insert location of numbers layer here
            continue-list = <BACKSPACE DELETE DOT COMMA>;// adjust as desired
            ignore-numbers;// numbers don't deactivate the layer
        };
        bspc_morph: bspc_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_MORPH";
            bindings =
                <&kp BSPC>,
                <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };
        tap2_num: tap2_num {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP2_NUM";
            #binding-cells = <0>;
            bindings =
                <&sl NUM>,
                <&num_word>;
        };
        tap2_sleep_win: tap2_sleep_win {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP2_SLEEP_WIN";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&win_sleep>;
        };
        tap2_sleep_mac: tap2_sleep_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP2_SLEEP_MAC";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&kp LA(LG(S))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
       &ht LS(Q) Q  &ht LS(W) W  &ht LS(E) E  &ht LS(R) R  &ht LS(T) T  &ht LS(Y) Y  &ht LS(U) U     &ht LS(I) I    &ht LS(O) O         &ht LS(P) P
       &ht LS(A) A  &ht LS(S) S  &ht LS(D) D  &ht LS(F) F  &ht LS(G) G  &ht LS(H) H  &ht LS(J) J     &ht LS(K) K    &ht LS(L) L         &ht DQT SQT
&mo 4  &ht LS(Z) Z  &ht LS(X) X  &ht LS(C) C  &ht LS(V) V  &ht LS(B) B  &ht LS(N) N  &ht LS(M) M  &ht SEMI COMMA  &ht COLON DOT  &ht QUESTION SLASH  &mo 4
                                  &skq LCTRL    &tap2_num        &mo 2    &kp SPACE    &tap2_num           &sl 2
            >;
        };

        num {
            label = "NUM";
            bindings = <
       &none   &ht LPAR N9    &ht ASTRK N8    &ht AMPS N7  &kp UNDER   &kp PLUS    &ht AMPS N7    &ht ASTRK N8   &ht LPAR N9   &kp PIPE
       &none  &ht CARET N6  &ht PERCENT N5  &ht DOLLAR N4  &kp MINUS  &kp EQUAL  &ht DOLLAR N4  &ht PERCENT N5  &ht CARET N6   &kp BSLH
&none  &none   &ht HASH N3       &ht AT N2    &ht EXCL N1     &kp LT     &kp GT    &ht EXCL N1       &ht AT N2   &ht HASH N3  &kp SLASH  &trans
                                    &trans   &kp NUMBER_0    &kp DOT  &kp SPACE   &kp NUMBER_0   &ht COMMA DOT
            >;
        };

        nav {
            label = "NAV";
            bindings = <
          &kp LG(TAB)         &trans           &trans      &trans  &kp LG(GRAVE)  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &trans
        &skq LEFT_ALT  &skq LEFT_GUI  &skq LEFT_SHIFT  &skq LCTRL    &kp LG(TAB)  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT   &none
&trans         &trans         &trans           &trans      &trans    &kp LA(TAB)    &trans     &trans     &trans     &trans  &trans  &trans
                                                &none       &mo 3         &trans  &kp C_PP     &trans
            >;
        };

        shortcut {
            label = "SHORTCUT";
            bindings = <
        &kp LA(F4)            &kp LC(W)  &mac_finder    &kp LC(R)      &kp LC(T)  &trans               &trans  &trans  &kp LC(O)  &ht LS(LC(P)) LC(P)
         &kp LC(A)  &ht LC(LS(S)) LC(S)       &trans  &ht LC(F) F         &trans  &trans               &trans  &trans  &kp LC(L)               &trans
&trans   &kp LC(Z)            &kp LC(X)  &kp LC(INS)  &kp LS(INS)  &kp LS(LC(Z))  &trans  &ht LC(LS(N)) LC(N)  &trans     &trans      &tap2_sleep_win  &trans
                                              &trans       &trans         &trans  &trans               &trans  &trans
            >;
        };

        shortcut_mac {
            label = "SHORTCUT_MAC";
            bindings = <
        &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)      &kp LG(T)         &trans  &trans  &trans  &trans  &ht LS(LC(P)) LG(P)
           &trans     &trans     &trans     &trans         &trans         &trans  &trans  &trans  &trans               &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LC(C)  &kp LG(V)  &kp LS(LG(Z))         &trans  &trans  &trans  &trans      &tap2_sleep_mac  &trans
                                 &trans     &trans         &trans  &kp LG(SPACE)  &trans  &trans
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
             &reset  &bt BT_CLR  &out OUT_TOG  &trans  &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &bootloader  &bt BT_NXT        &trans  &trans  &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans       &trans  &bt BT_PRV        &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                       &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
